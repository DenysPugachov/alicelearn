{"version":3,"sources":["componets/header/header.js","componets/inputAnswer/inputAnswer.js","componets/randomIntGen/randomIntGen.js","componets/expressions/sub.js","componets/expressions/add.js","componets/expressions/mul.js","componets/expressions/dev.js","componets/app/app.js","index.js"],"names":["Header","className","this","props","selectedBtn","add","onClick","btnClicked","sub","mul","dev","Component","InputAnswer","state","inputValue","onInputChange","e","setState","target","value","onSubmit","preventDefault","onInputAnswer","type","placeholder","onChange","randomGen","max","Math","floor","random","Sub","firstNum","randomIntGen","secondNum","rightAnswerCounter","wrongAnswerCounter","userAnswer","console","log","Add","Mul","Dev","App","clearState","btn","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e8e819f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Header extends Component {\r\n\r\n  render() {\r\n    // console.log(this.props.selectedBtn);\r\n    return (\r\n      <nav className=\"navbar navbar-expand bg-transparent mb-3\" >\r\n        <div className=\"container justify-content-center\">\r\n          <ul className=\"navbar-nav justify-content-around w-50\">\r\n\r\n            <li className=\"nav-item\">\r\n              <button\r\n                className={ `btn btn-outline-danger ` + (this.props.selectedBtn.add && \"active\") }\r\n                onClick={ () => {\r\n                  this.props.btnClicked(\"add\");\r\n                } }\r\n              > + </button>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <button\r\n                className={ `btn btn-outline-warning ` + (this.props.selectedBtn.sub && \"active\") }\r\n                onClick={ () => {\r\n                  this.props.btnClicked(\"sub\");\r\n                } }\r\n              > - </button>\r\n            </li>\r\n\r\n            <li className=\"navbar-item\">\r\n              <button\r\n                className={ `btn btn-outline-success ` + (this.props.selectedBtn.mul && \"active\") }\r\n                onClick={ () => {\r\n                  this.props.btnClicked(\"mul\");\r\n                } }\r\n              >*</button>\r\n            </li>\r\n\r\n            <li className=\"navbar-item\">\r\n              <button\r\n                className={ `btn btn-outline-primary ` + (this.props.selectedBtn.dev && \"active\") }\r\n                onClick={ () => {\r\n                  this.props.btnClicked(\"dev\");\r\n                } }\r\n              >/</button>\r\n            </li>\r\n\r\n          </ul>\r\n        </div>\r\n      </nav >\r\n    );\r\n  }\r\n};;\r\n","import React, { Component } from \"react\";\r\nimport \"./inputAnswer.css\";\r\n\r\nexport default class InputAnswer extends Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  onInputChange = (e) => {\r\n    this.setState({\r\n      inputValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onInputAnswer(this.state.inputValue);\r\n    this.setState({\r\n      inputValue: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n\r\n    return (\r\n      <form className=\"input-group\" onSubmit={this.onSubmit}>\r\n        <input\r\n          className=\"form-control large-input\"\r\n          type=\"number\"\r\n          placeholder=\"...\"\r\n          onChange={this.onInputChange}\r\n          value={inputValue}\r\n        />\r\n\r\n        <button className=\"btn btn-outline-info\" type=\"submit\">\r\n          <span>&#10003;</span>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","export default function randomGen(max) {\r\n  return Math.floor(Math.random() * max + 1);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InputAnswer from \"../inputAnswer/inputAnswer\";\r\nimport randomIntGen from \"../randomIntGen/randomIntGen\";\r\n\r\nexport default class Sub extends Component {\r\n\r\n  state = {\r\n    firstNum: randomIntGen(1000),\r\n    secondNum: randomIntGen(1000),\r\n    rightAnswerCounter: 0,\r\n    wrongAnswerCounter: 0,\r\n  };\r\n\r\n  sub() {\r\n    if (this.state.firstNum < this.state.secondNum) {\r\n      [this.state.firstNum, this.state.secondNum] = [\r\n        this.state.secondNum,\r\n        this.state.firstNum,\r\n      ];\r\n    }\r\n\r\n    const checkAnswer = (userAnswer) => {\r\n      if (!userAnswer) {\r\n        return;\r\n      }\r\n\r\n      //try to use EqualTo() or something like this;\r\n      // eslint-disable-next-line eqeqeq\r\n      if (userAnswer == this.state.firstNum - this.state.secondNum) {\r\n        this.setState(({ rightAnswerCounter }) => {\r\n          return {\r\n            firstNum: randomIntGen(1000),\r\n            secondNum: randomIntGen(1000),\r\n            rightAnswerCounter: rightAnswerCounter + 1,\r\n          };\r\n        });\r\n      } else {\r\n        this.setState(({ wrongAnswerCounter }) => {\r\n          return {\r\n            wrongAnswerCounter: wrongAnswerCounter + 1,\r\n          };\r\n        });\r\n      }\r\n\r\n      console.log(`Right answer = ${this.state.firstNum - this.state.secondNum} \\nUser input   = ${userAnswer}`);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"h3\">\r\n          <span className=\"text-success d-block\">\r\n            Верно: { this.state.rightAnswerCounter }\r\n          </span>\r\n          <span className=\"text-danger\">\r\n            Мимо: { this.state.wrongAnswerCounter }\r\n          </span>\r\n        </div>\r\n        <br />\r\n\r\n        <div className=\"d-flex\">\r\n          <span className=\"h1 text-nowrap mx-3 d-flex align-items-center\">\r\n            { this.state.firstNum } - { this.state.secondNum } =\r\n          </span>\r\n          <InputAnswer onInputAnswer={ checkAnswer } />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.sub();\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InputAnswer from \"../inputAnswer/inputAnswer\";\r\nimport randomIntGen from \"../randomIntGen/randomIntGen\";\r\n\r\nexport default class Add extends Component {\r\n\r\n  state = {\r\n    firstNum: randomIntGen(1000),\r\n    secondNum: randomIntGen(1000),\r\n    rightAnswerCounter: 0,\r\n    wrongAnswerCounter: 0,\r\n  };\r\n\r\n  add() {\r\n    const checkAnswer = (userAnswer) => {\r\n      if (!userAnswer) {\r\n        return;\r\n      }\r\n\r\n      //try to use EqualTo() or something like this;\r\n      // eslint-disable-next-line eqeqeq\r\n      if (userAnswer == this.state.firstNum + this.state.secondNum) {\r\n        //make count of rightAnswer\r\n        this.setState(({ rightAnswerCounter }) => {\r\n          return {\r\n            firstNum: randomIntGen(1000),\r\n            secondNum: randomIntGen(1000),\r\n            rightAnswerCounter: rightAnswerCounter + 1,\r\n          };\r\n        });\r\n      } else {\r\n        //make count of wrongAnswer\r\n        this.setState(({ wrongAnswerCounter }) => {\r\n          return {\r\n            wrongAnswerCounter: wrongAnswerCounter + 1,\r\n          };\r\n        });\r\n      }\r\n\r\n      console.log(`Right answer = ${this.state.firstNum + this.state.secondNum} \\nUser input   = ${userAnswer}`);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"h3\">\r\n          <span className=\"text-success d-block\">\r\n            Верно: { this.state.rightAnswerCounter }\r\n          </span>\r\n          <span className=\"text-danger\">\r\n            Мимо: { this.state.wrongAnswerCounter }\r\n          </span>\r\n        </div>\r\n        <br />\r\n\r\n        <div className=\"d-flex\">\r\n          <span className=\"h1 text-nowrap mx-3 d-flex align-items-center\">\r\n            { this.state.firstNum } + { this.state.secondNum } =\r\n          </span>\r\n          <InputAnswer onInputAnswer={ checkAnswer } />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.add();\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InputAnswer from \"../inputAnswer/inputAnswer\";\r\nimport randomIntGen from \"../randomIntGen/randomIntGen\";\r\n\r\nexport default class Mul extends Component {\r\n\r\n  state = {\r\n    firstNum: randomIntGen(100),\r\n    secondNum: randomIntGen(100),\r\n    rightAnswerCounter: 0,\r\n    wrongAnswerCounter: 0,\r\n  };\r\n\r\n  mul() {\r\n    const checkAnswer = (userAnswer) => {\r\n      if (!userAnswer) {\r\n        return;\r\n      }\r\n\r\n      //try to use EqualTo() or something like this;\r\n      // eslint-disable-next-line eqeqeq\r\n      if (userAnswer == this.state.firstNum * this.state.secondNum) {\r\n        //make count of rightAnswer\r\n        this.setState(({ rightAnswerCounter }) => {\r\n          return {\r\n            firstNum: randomIntGen(),\r\n            secondNum: randomIntGen(),\r\n            rightAnswerCounter: rightAnswerCounter + 1,\r\n          };\r\n        });\r\n      } else {\r\n        //make count of wrongAnswer\r\n        this.setState(({ wrongAnswerCounter }) => {\r\n          return {\r\n            wrongAnswerCounter: wrongAnswerCounter + 1,\r\n          };\r\n        });\r\n      }\r\n\r\n      console.log(`Right answer = ${this.state.firstNum * this.state.secondNum} \\nUser input   = ${userAnswer}`);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"h3\">\r\n          <span className=\"text-success d-block\">\r\n            Верно: { this.state.rightAnswerCounter }\r\n          </span>\r\n          <span className=\"text-danger\">\r\n            Мимо: { this.state.wrongAnswerCounter }\r\n          </span>\r\n        </div>\r\n        <br />\r\n\r\n        <div className=\"d-flex\">\r\n          <span className=\"h1 text-nowrap mx-3 d-flex align-items-center\">\r\n            { this.state.firstNum } * { this.state.secondNum } =\r\n          </span>\r\n          <InputAnswer onInputAnswer={ checkAnswer } />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.mul();\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InputAnswer from \"../inputAnswer/inputAnswer\";\r\nimport randomIntGen from \"../randomIntGen/randomIntGen\";\r\n\r\nexport default class Dev extends Component {\r\n\r\n  state = {\r\n    firstNum: randomIntGen(1000),\r\n    secondNum: randomIntGen(10),\r\n    rightAnswerCounter: 0,\r\n    wrongAnswerCounter: 0,\r\n  };\r\n\r\n  dev() {\r\n    const checkAnswer = (userAnswer) => {\r\n      if (!userAnswer) {\r\n        return;\r\n      }\r\n\r\n      //try to use EqualTo() or something like this;\r\n      // eslint-disable-next-line eqeqeq\r\n      if (userAnswer == (this.state.firstNum * this.state.secondNum) / this.state.secondNum) {\r\n        //make count of rightAnswer\r\n        this.setState(({ rightAnswerCounter }) => {\r\n          return {\r\n            rightAnswerCounter: rightAnswerCounter + 1,\r\n            firstNum: randomIntGen(1000),\r\n            secondNum: randomIntGen(10),\r\n          };\r\n        });\r\n      } else {\r\n        //make count of wrongAnswer\r\n        this.setState(({ wrongAnswerCounter }) => {\r\n          return {\r\n            wrongAnswerCounter: wrongAnswerCounter + 1,\r\n          };\r\n        });\r\n      }\r\n\r\n      console.log(`Right answer = ${(this.state.firstNum * this.state.secondNum) / this.state.secondNum} \\nUser input   = ${userAnswer}`);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"h3\">\r\n          <span className=\"text-success d-block\">\r\n            Верно: { this.state.rightAnswerCounter }\r\n          </span>\r\n          <span className=\"text-danger\">\r\n            Мимо: { this.state.wrongAnswerCounter }\r\n          </span>\r\n        </div>\r\n        <br />\r\n\r\n        <div className=\"d-flex\">\r\n          <span className=\"h1 text-nowrap mx-3 d-flex align-items-center\">\r\n            { this.state.firstNum * this.state.secondNum } / { this.state.secondNum } =\r\n          </span>\r\n          <InputAnswer onInputAnswer={ checkAnswer } />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.dev();\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../header/header\";\r\nimport \"./bootstrap.min.css\";\r\nimport { Sub, Add, Mul, Dev } from \"../expressions\";\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    add: false,\r\n    sub: false,\r\n    mul: false,\r\n    dev: true,\r\n  };\r\n\r\n  clearState = () => {\r\n    this.setState(() => {\r\n      return {\r\n        add: false,\r\n        sub: false,\r\n        mul: false,\r\n        dev: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  btnClicked = (btn) => {\r\n    // console.log(` Btn clicked form App.js => ${btn}`);\r\n\r\n    this.clearState();\r\n\r\n    switch (btn) {\r\n      case \"add\":\r\n        this.setState(({ add: true }));\r\n        break;\r\n\r\n      case \"sub\":\r\n        this.setState(({ sub: true }));\r\n        break;\r\n\r\n      case \"mul\":\r\n        this.setState(({ mul: true }));\r\n        break;\r\n\r\n      case \"dev\":\r\n        this.setState(({ dev: true }));\r\n        break;\r\n\r\n      default:\r\n        console.error(\"Wrong heder props (clickedBtn)\");\r\n        break;\r\n    }\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\" >\r\n        <Header\r\n          btnClicked={ this.btnClicked }\r\n          selectedBtn={ this.state }\r\n        />\r\n        <hr />\r\n        {this.state.add && <Add /> }\r\n        {this.state.sub && <Sub /> }\r\n        {this.state.dev && <Dev /> }\r\n        {this.state.mul && <Mul /> }\r\n\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./componets/app/app\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}