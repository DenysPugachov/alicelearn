{"version":3,"sources":["componets/GoogleAuth.js","componets/header/header.js","componets/inputAnswer/inputAnswer.js","componets/randomIntGen/randomIntGen.js","componets/expressions/sub.js","componets/expressions/add.js","componets/expressions/mul.js","componets/expressions/dev.js","componets/timer/timer.js","componets/app/startPage.js","componets/app/app.js","index.js"],"names":["GoogleAuth","state","isSingedIn","onSignInClick","auth","signIn","onSignOutClick","signOut","onAuthChange","setState","isSignedIn","get","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","this","className","onClick","renderAuthBtn","Component","btnsData","label","id","color","Header","expressionBtns","map","btn","cls","join","activeClassName","to","InputAnswer","inputValue","onInputChange","e","target","value","onSubmit","preventDefault","props","onInputAnswer","autoFocus","type","placeholder","onChange","randomGen","max","Math","floor","random","Sub","firstNum","randomIntGen","secondNum","rightAnswerCounter","wrongAnswerCounter","userAnswer","revertAnswer","split","reverse","console","log","sub","Add","add","Mul","mul","Dev","dev","Clock","secondsFromStart","secs","divisorForMinutes","divisorForSeconds","ceil","setInterval","timeFromStart","secondsToTime","getTwoDigitsNum","num","toLocaleString","undefined","minimumIntegerDigits","h","m","s","React","startPage","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14d816a8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\nexport default class GoogleAuth extends Component {\r\n\r\n  state = {\r\n    isSingedIn: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    //load additional code for googleOAuth2 lib;\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      //initialize authentication client with my clientId\r\n      window.gapi.client.init({\r\n        clientId: \"1053885146648-kjldknnmt63b1phck3biij2db258nvhk.apps.googleusercontent.com\",\r\n        //ask users scop of email;\r\n        scope: \"email\",\r\n      }).then(() => {\r\n\r\n        this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n        this.setState({ isSignedIn: this.auth.isSignedIn.get() });\r\n\r\n        //That takes a boolean value. listen() passes true to this function when the user signs in, and false when the user signs out.\r\n        //https://developers.google.com/identity/sign-in/web/reference#googleauthissignedinlistenlistener\r\n        this.auth.isSignedIn.listen(this.onAuthChange);\r\n      })\r\n    })\r\n  }\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  }\r\n\r\n  onAuthChange = () => {\r\n    this.setState({ isSignedIn: this.auth.isSignedIn.get() });\r\n  };\r\n\r\n  renderAuthBtn() {\r\n    switch (this.state.isSignedIn) {\r\n      case null:\r\n        return <div>I don't now Auth status</div>;\r\n\r\n      case true:\r\n        return <button\r\n          className=\"btn btn-danger\"\r\n          onClick={ this.onSignOutClick }\r\n        >\r\n          <i className=\"google icon\" />\r\n          Sign Out\r\n          </button>;\r\n\r\n      case false:\r\n        return <button\r\n          className=\"btn btn-success\"\r\n          onClick={ this.onSignInClick }\r\n        >\r\n          <i className=\"google icon\" />\r\n        Sign In with Google\r\n        </button>;\r\n\r\n      default:\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return <div>{ this.renderAuthBtn() }</div>\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GoogleAuth from \"../GoogleAuth\";\r\n\r\n\r\nconst btnsData = [\r\n  { label: \"+\", id: \"add\", color: \"danger\" },\r\n  { label: \"-\", id: \"sub\", color: \"warning\" },\r\n  { label: \"*\", id: \"mul\", color: \"success\" },\r\n  { label: \"/\", id: \"dev\", color: \"primary\" },\r\n];\r\n\r\nconst Header = () => {\r\n\r\n  const expressionBtns = () => btnsData.map(btn => {\r\n\r\n    const cls = [\"btn\", `btn-outline-${btn.color}`];\r\n\r\n    return (\r\n      <NavLink\r\n        className={ cls.join(\" \") }\r\n        activeClassName=\"active\"\r\n        key={ btn.id }\r\n        to={ `/${btn.id}` }\r\n        onClick={ () => expressionBtns }\r\n      >\r\n        { btn.label }\r\n      </NavLink>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand bg-transparent mb-3\" >\r\n      <div className=\"container justify-content-around\">\r\n\r\n        { expressionBtns() }\r\n        <GoogleAuth />\r\n      </div>\r\n    </nav >\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport \"./inputAnswer.css\";\r\n\r\nexport default class InputAnswer extends Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  onInputChange = (e) => {\r\n    this.setState({\r\n      inputValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onInputAnswer(this.state.inputValue);\r\n    this.setState({\r\n      inputValue: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n\r\n    return (\r\n      <form className=\"answer-form\" onSubmit={ this.onSubmit }>\r\n        <input\r\n          autoFocus\r\n          className=\"input-answer\"\r\n          type=\"number\"\r\n          placeholder=\"...\"\r\n          onChange={ this.onInputChange }\r\n          value={ inputValue }\r\n        />\r\n        {/* <button className=\"btn btn-outline-info submit-answer-btn\" type=\"submit\">\r\n          <span>&#10003;</span>\r\n        </button> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","export default function randomGen(max) {\r\n  return Math.floor(Math.random() * max + 1);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InputAnswer from \"../inputAnswer/inputAnswer\";\r\nimport randomIntGen from \"../randomIntGen/randomIntGen\";\r\n\r\nexport default class Sub extends Component {\r\n\r\n  state = {\r\n    firstNum: randomIntGen(1000),\r\n    secondNum: randomIntGen(1000),\r\n    rightAnswerCounter: 0,\r\n    wrongAnswerCounter: 0,\r\n  };\r\n\r\n  sub() {\r\n    if (this.state.firstNum < this.state.secondNum) {\r\n      [this.state.firstNum, this.state.secondNum] = [\r\n        this.state.secondNum,\r\n        this.state.firstNum,\r\n      ];\r\n    }\r\n\r\n    const checkAnswer = (userAnswer) => {\r\n      if (!userAnswer) {\r\n        return;\r\n      }\r\n\r\n      //reverse answer form bidi:override input\r\n      const revertAnswer = userAnswer.split(\"\").reverse().join(\"\");\r\n\r\n      //try to use EqualTo() or something like this;\r\n      // eslint-disable-next-line eqeqeq\r\n      if (revertAnswer == this.state.firstNum - this.state.secondNum) {\r\n        this.setState(({ rightAnswerCounter }) => {\r\n          return {\r\n            firstNum: randomIntGen(1000),\r\n            secondNum: randomIntGen(1000),\r\n            rightAnswerCounter: rightAnswerCounter + 1,\r\n          };\r\n        });\r\n      } else {\r\n        this.setState(({ wrongAnswerCounter }) => {\r\n          return {\r\n            wrongAnswerCounter: wrongAnswerCounter + 1,\r\n          };\r\n        });\r\n      }\r\n\r\n      console.log(`Right answer = ${this.state.firstNum - this.state.secondNum} \\nUser input   = ${revertAnswer}`);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"h3\">\r\n          <span className=\"text-success d-block\">\r\n            Верно: { this.state.rightAnswerCounter }\r\n          </span>\r\n          <span className=\"text-danger\">\r\n            Мимо: { this.state.wrongAnswerCounter }\r\n          </span>\r\n        </div>\r\n        <hr />\r\n        <br />\r\n\r\n        <div className=\"expr-container\">\r\n          <div className=\"expression-wrapper\">\r\n            <div className=\"number-box \">\r\n\r\n              <div className=\"num\">\r\n                { this.state.firstNum }\r\n              </div>\r\n\r\n              <span className=\"expr-symbol\"> - </span>\r\n\r\n              <div className=\"num\">\r\n                { this.state.secondNum }\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"num\">\r\n              <InputAnswer onInputAnswer={ checkAnswer } />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.sub();\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InputAnswer from \"../inputAnswer/inputAnswer\";\r\nimport randomIntGen from \"../randomIntGen/randomIntGen\";\r\n\r\nexport default class Add extends Component {\r\n\r\n  state = {\r\n    firstNum: randomIntGen(1000),\r\n    secondNum: randomIntGen(1000),\r\n    rightAnswerCounter: 0,\r\n    wrongAnswerCounter: 0,\r\n  };\r\n\r\n  add() {\r\n    const checkAnswer = (userAnswer) => {\r\n      if (!userAnswer) {\r\n        return;\r\n      }\r\n\r\n      //reverse answer form bidi:override input\r\n      const revertAnswer = userAnswer.split(\"\").reverse().join(\"\");\r\n\r\n      //try to use EqualTo() or something like this;\r\n      // eslint-disable-next-line eqeqeq\r\n      if (revertAnswer == this.state.firstNum + this.state.secondNum) {\r\n        //count rightAnswer\r\n        this.setState(({ rightAnswerCounter }) => {\r\n          return {\r\n            firstNum: randomIntGen(1000),\r\n            secondNum: randomIntGen(1000),\r\n            rightAnswerCounter: rightAnswerCounter + 1,\r\n          };\r\n        });\r\n      } else {\r\n        //count wrongAnswer\r\n        this.setState(({ wrongAnswerCounter }) => {\r\n          return {\r\n            wrongAnswerCounter: wrongAnswerCounter + 1,\r\n          };\r\n        });\r\n      }\r\n\r\n      //show answer in console\r\n      console.log(`Right answer = ${this.state.firstNum + this.state.secondNum} \\n User input   = ${revertAnswer}`);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"h3\">\r\n          <span className=\"text-success d-block\">\r\n            Верно: { this.state.rightAnswerCounter }\r\n          </span>\r\n          <span className=\"text-danger\">\r\n            Мимо: { this.state.wrongAnswerCounter }\r\n          </span>\r\n        </div>\r\n        <hr />\r\n        <br />\r\n\r\n        <div className=\"expr-container\">\r\n          <div className=\"expression-wrapper\">\r\n            <div className=\"number-box \">\r\n\r\n              <div className=\"num\">\r\n                { this.state.firstNum }\r\n              </div>\r\n\r\n              <span className=\"expr-symbol\"> + </span>\r\n\r\n              <div className=\"num\">\r\n                { this.state.secondNum }\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"num\">\r\n              <InputAnswer onInputAnswer={ checkAnswer } />\r\n            </div>\r\n\r\n          </div>\r\n        </div >\r\n      </div >\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.add();\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InputAnswer from \"../inputAnswer/inputAnswer\";\r\nimport randomIntGen from \"../randomIntGen/randomIntGen\";\r\nimport \"./mul.css\";\r\n\r\nexport default class Mul extends Component {\r\n\r\n  state = {\r\n    firstNum: randomIntGen(100),\r\n    secondNum: randomIntGen(100),\r\n    rightAnswerCounter: 0,\r\n    wrongAnswerCounter: 0,\r\n  };\r\n\r\n  mul() {\r\n    const checkAnswer = (userAnswer) => {\r\n      if (!userAnswer) {\r\n        return;\r\n      }\r\n\r\n      //reverse answer form bidi:override input\r\n      const revertAnswer = userAnswer.split(\"\").reverse().join(\"\");\r\n\r\n      console.log(revertAnswer, this.state.firstNum, this.state.secondNum);\r\n\r\n      //try to use EqualTo() or something like this;\r\n      // eslint-disable-next-line eqeqeq\r\n      if (revertAnswer == this.state.firstNum * this.state.secondNum) {\r\n        //make count of rightAnswer\r\n        this.setState(({ rightAnswerCounter }) => {\r\n          return {\r\n            firstNum: randomIntGen(100),\r\n            secondNum: randomIntGen(100),\r\n            rightAnswerCounter: rightAnswerCounter + 1,\r\n          };\r\n        });\r\n      } else {\r\n        //make count of wrongAnswer\r\n        this.setState(({ wrongAnswerCounter }) => {\r\n          return {\r\n            wrongAnswerCounter: wrongAnswerCounter + 1,\r\n          };\r\n        });\r\n      }\r\n\r\n      console.log(`Right answer = ${this.state.firstNum * this.state.secondNum} \\n User input   = ${revertAnswer}`);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"h3\">\r\n          <span className=\"text-success d-block\">\r\n            Верно: { this.state.rightAnswerCounter }\r\n          </span>\r\n          <span className=\"text-danger\">\r\n            Мимо: { this.state.wrongAnswerCounter }\r\n          </span>\r\n        </div>\r\n        <hr />\r\n        <br />\r\n\r\n        <div className=\"expr-container\">\r\n          <div className=\"expression-wrapper\">\r\n            <div className=\"number-box \">\r\n\r\n              <div className=\"num\">\r\n                { this.state.firstNum }\r\n              </div>\r\n\r\n              <span className=\"expr-symbol mul-symbol\"> * </span>\r\n\r\n              <div className=\"num\">\r\n                { this.state.secondNum }\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"num\">\r\n              <InputAnswer onInputAnswer={ checkAnswer } />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.mul();\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InputAnswer from \"../inputAnswer/inputAnswer\";\r\nimport randomIntGen from \"../randomIntGen/randomIntGen\";\r\nimport \"./dev.css\";\r\n\r\nexport default class Dev extends Component {\r\n\r\n  state = {\r\n    firstNum: randomIntGen(1000),\r\n    secondNum: randomIntGen(10),\r\n    rightAnswerCounter: 0,\r\n    wrongAnswerCounter: 0,\r\n  };\r\n\r\n  dev() {\r\n    const checkAnswer = (userAnswer) => {\r\n      if (!userAnswer) {\r\n        return;\r\n      }\r\n\r\n      //try to use EqualTo() or something like this;\r\n      // eslint-disable-next-line eqeqeq\r\n      if (userAnswer == (this.state.firstNum * this.state.secondNum) / this.state.secondNum) {\r\n        //make count of rightAnswer\r\n        this.setState(({ rightAnswerCounter }) => {\r\n          return {\r\n            rightAnswerCounter: rightAnswerCounter + 1,\r\n            firstNum: randomIntGen(1000),\r\n            secondNum: randomIntGen(10),\r\n          };\r\n        });\r\n      } else {\r\n        //make count of wrongAnswer\r\n        this.setState(({ wrongAnswerCounter }) => {\r\n          return {\r\n            wrongAnswerCounter: wrongAnswerCounter + 1,\r\n          };\r\n        });\r\n      }\r\n\r\n      console.log(`Right answer = ${(this.state.firstNum * this.state.secondNum) / this.state.secondNum} \\nUser input   = ${userAnswer}`);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"h3\">\r\n          <span className=\"text-success d-block\">\r\n            Верно: { this.state.rightAnswerCounter }\r\n          </span>\r\n          <span className=\"text-danger\">\r\n            Мимо: { this.state.wrongAnswerCounter }\r\n          </span>\r\n        </div>\r\n        <hr />\r\n        <br />\r\n\r\n        <div className=\"dev-container\">\r\n          <div className=\"dividend\">\r\n            { this.state.firstNum * this.state.secondNum }\r\n            <div className=\"divisor\">{ this.state.secondNum }\r\n              <div className=\"dev-answer\">\r\n                <InputAnswer onInputAnswer={ checkAnswer } />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return this.dev();\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Clock extends React.Component {\r\n  state = { secondsFromStart: 0 };\r\n\r\n  secondsToTime(secs) {\r\n    let hours = Math.floor(secs / (60 * 60));\r\n\r\n    let divisorForMinutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisorForMinutes / 60);\r\n\r\n    let divisorForSeconds = divisorForMinutes % 60;\r\n    let seconds = Math.ceil(divisorForSeconds);\r\n    return { \"h\": hours, \"m\": minutes, \"s\": seconds };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      this.setState(({ secondsFromStart }) => {\r\n        return {\r\n          secondsFromStart: secondsFromStart + 1,\r\n        };\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n\r\n    const timeFromStart = this.secondsToTime(this.state.secondsFromStart);\r\n\r\n    //transform 0 => 00;\r\n    const getTwoDigitsNum = num => {\r\n      return (num.toLocaleString(undefined, { minimumIntegerDigits: 2 }));\r\n    };\r\n\r\n    return (\r\n      <div className=\"time\" >\r\n        Прошло: { getTwoDigitsNum(timeFromStart.h) }:{ getTwoDigitsNum(timeFromStart.m) }:{ getTwoDigitsNum(timeFromStart.s) }\r\n      </div >\r\n    );\r\n  }\r\n}","import React from \"react\";\r\n\r\nconst startPage = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"m-5\">Выбери упражнение</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default startPage;","import React from \"react\";\r\nimport Header from \"../header/header\";\r\nimport \"./bootstrap.min.css\";\r\nimport \"./style.css\";\r\nimport { Sub, Add, Mul, Dev } from \"../expressions\";\r\nimport Timer from \"../timer/timer\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport startPage from \"./startPage\";\r\n\r\n\r\nconst appVersion = \"v1.051\";\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"container\" >\r\n      <div className=\"version\">{ appVersion }</div>\r\n\r\n      <BrowserRouter>\r\n\r\n        <Header />\r\n\r\n        <hr />\r\n\r\n        <Timer />\r\n\r\n        <section className=\"expression-container\">\r\n          <Route path=\"/\" exact component={ startPage } />\r\n          <Route path=\"/sub\" exact component={ Sub } />\r\n          <Route path=\"/add\" exact component={ Add } />\r\n          <Route path=\"/mul\" exact component={ Mul } />\r\n          <Route path=\"/dev\" exact component={ Dev } />\r\n        </section>\r\n\r\n      </BrowserRouter>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./componets/app/app\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}